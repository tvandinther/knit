"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

schema Values:
    r"""
    Values

    Attributes
    ----------
    affinity : ValuesAffinity, required, default is {}
    backend : any, optional
        http://backend-podinfo:9898/echo
    backends : [any], required, default is []
    cache : str, required, default is ""
        Redis address in the format tcp://<host>:<port>
    certificate : ValuesCertificate, optional
        create a certificate manager certificate (cert-manager required)
    config : ValuesConfig, optional
        config file settings
    extraArgs : [any], required, default is []
        Additional command line arguments to pass to podinfo container
    extraEnvs : [any], required, default is []
        Extra environment variables for the podinfo container
        Example on how to configure extraEnvs
        #  - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
        #    value: "http://otel:4317"
        #  - name: MULTIPLE_VALUES
        #    value: TEST
    faults : ValuesFaults, optional
        failure conditions
    h2c : ValuesH2C, optional
        enable h2c protocol (non-TLS version of HTTP/2)
    host : any, optional
        0.0.0.0
    hpa : ValuesHpa, optional
        metrics-server add-on required
    image : ValuesImage, optional
    ingress : ValuesIngress, optional
    linkerd : ValuesLinkerd, optional
    logLevel : str, required, default is "info"
    nodeSelector : ValuesNodeSelector, required, default is {}
    podAnnotations : ValuesPodAnnotations, required, default is {}
    podDisruptionBudget : ValuesPodDisruptionBudget, required, default is {}
        Disruption budget will be configured only when the replicaCount is greater than 1
        maxUnavailable: 1
    probes : ValuesProbes, optional
        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    redis : ValuesRedis, optional
        Redis deployment
    replicaCount : int, required, default is 1
    resources : ValuesResources, optional
    securityContext : ValuesSecurityContext, required, default is {}
        set container security context
    service : ValuesService, optional
        Kubernetes Service settings
    serviceAccount : ValuesServiceAccount, optional
    serviceMonitor : ValuesServiceMonitor, optional
        create Prometheus Operator monitor
    tls : ValuesTls, optional
        enable tls on the podinfo service
    tolerations : [any], required, default is []
    topologySpreadConstraints : [any], required, default is []
        https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    ui : ValuesUi, optional
    """

    affinity: ValuesAffinity = {}
    backend?: any
    backends: [any] = []
    cache: str = ""
    certificate?: ValuesCertificate
    config?: ValuesConfig
    extraArgs: [any] = []
    extraEnvs: [any] = []
    faults?: ValuesFaults
    h2c?: ValuesH2C
    host?: any
    hpa?: ValuesHpa
    image?: ValuesImage
    ingress?: ValuesIngress
    linkerd?: ValuesLinkerd
    logLevel: str = "info"
    nodeSelector: ValuesNodeSelector = {}
    podAnnotations: ValuesPodAnnotations = {}
    podDisruptionBudget: ValuesPodDisruptionBudget = {}
    probes?: ValuesProbes
    redis?: ValuesRedis
    replicaCount: int = 1
    resources?: ValuesResources
    securityContext: ValuesSecurityContext = {}
    service?: ValuesService
    serviceAccount?: ValuesServiceAccount
    serviceMonitor?: ValuesServiceMonitor
    tls?: ValuesTls
    tolerations: [any] = []
    topologySpreadConstraints: [any] = []
    ui?: ValuesUi

schema ValuesAffinity:
    r"""
    ValuesAffinity
    """

    [...str]: any

schema ValuesCertificate:
    r"""
    create a certificate manager certificate (cert-manager required)

    Attributes
    ----------
    create : bool, required, default is False
    dnsNames : [str], optional
        the hostname / subject alternative names for the certificate
    issuerRef : ValuesCertificateIssuerRef, optional
        the issuer used to issue the certificate
    """

    create: bool = False
    dnsNames?: [str]
    issuerRef?: ValuesCertificateIssuerRef

schema ValuesCertificateIssuerRef:
    r"""
    the issuer used to issue the certificate

    Attributes
    ----------
    kind : str, required, default is "ClusterIssuer"
    name : str, required, default is "self-signed"
    """

    kind: str = "ClusterIssuer"
    name: str = "self-signed"

schema ValuesConfig:
    r"""
    config file settings

    Attributes
    ----------
    name : str, required, default is ""
        config file name
    path : str, required, default is ""
        config file path
    """

    name: str = ""
    path: str = ""

schema ValuesFaults:
    r"""
    failure conditions

    Attributes
    ----------
    delay : bool, required, default is False
    error : bool, required, default is False
    testFail : bool, required, default is False
    testTimeout : bool, required, default is False
    unhealthy : bool, required, default is False
    unready : bool, required, default is False
    """

    delay: bool = False
    error: bool = False
    testFail: bool = False
    testTimeout: bool = False
    unhealthy: bool = False
    unready: bool = False

schema ValuesH2C:
    r"""
    enable h2c protocol (non-TLS version of HTTP/2)

    Attributes
    ----------
    enabled : bool, required, default is False
    """

    enabled: bool = False

schema ValuesHpa:
    r"""
    metrics-server add-on required

    Attributes
    ----------
    cpu : any, optional
        average total CPU usage per pod (1-100)
    enabled : bool, required, default is False
    maxReplicas : int, required, default is 10
    memory : any, optional
        average memory usage per pod (100Mi-1Gi)
    requests : any, optional
        average http requests per second per pod (k8s-prometheus-adapter)
    """

    cpu?: any
    enabled: bool = False
    maxReplicas: int = 10
    memory?: any
    requests?: any

schema ValuesImage:
    r"""
    ValuesImage

    Attributes
    ----------
    pullPolicy : str, required, default is "IfNotPresent"
    repository : str, required, default is "ghcr.io/stefanprodan/podinfo"
    tag : str, required, default is "6.7.1"
    """

    pullPolicy: str = "IfNotPresent"
    repository: str = "ghcr.io/stefanprodan/podinfo"
    tag: str = "6.7.1"

schema ValuesIngress:
    r"""
    ValuesIngress

    Attributes
    ----------
    additionalLabels : ValuesIngressAdditionalLabels, required, default is {}
    annotations : ValuesIngressAnnotations, required, default is {}
    className : str, required, default is ""
    enabled : bool, required, default is False
    hosts : [ValuesIngressHostsItems0], optional
        kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
    tls : [any], required, default is []
        - secretName: chart-example-tls
        #    hosts:
        #      - chart-example.local
    """

    additionalLabels: ValuesIngressAdditionalLabels = {}
    annotations: ValuesIngressAnnotations = {}
    className: str = ""
    enabled: bool = False
    hosts?: [ValuesIngressHostsItems0]
    tls: [any] = []

schema ValuesIngressAdditionalLabels:
    r"""
    ValuesIngressAdditionalLabels
    """

    [...str]: any

schema ValuesIngressAnnotations:
    r"""
    ValuesIngressAnnotations
    """

    [...str]: any

schema ValuesIngressHostsItems0:
    r"""
    ValuesIngressHostsItems0

    Attributes
    ----------
    host : str, required, default is "podinfo.local"
    paths : [ValuesIngressHostsItems0PathsItems0], optional
    """

    host: str = "podinfo.local"
    paths?: [ValuesIngressHostsItems0PathsItems0]

schema ValuesIngressHostsItems0PathsItems0:
    r"""
    ValuesIngressHostsItems0PathsItems0

    Attributes
    ----------
    path : str, required, default is "/"
    pathType : str, required, default is "ImplementationSpecific"
    """

    path: str = "/"
    pathType: str = "ImplementationSpecific"

schema ValuesLinkerd:
    r"""
    ValuesLinkerd

    Attributes
    ----------
    profile : ValuesLinkerdProfile, optional
    """

    profile?: ValuesLinkerdProfile

schema ValuesLinkerdProfile:
    r"""
    ValuesLinkerdProfile

    Attributes
    ----------
    enabled : bool, required, default is False
    """

    enabled: bool = False

schema ValuesNodeSelector:
    r"""
    ValuesNodeSelector
    """

    [...str]: any

schema ValuesPodAnnotations:
    r"""
    ValuesPodAnnotations
    """

    [...str]: any

schema ValuesPodDisruptionBudget:
    r"""
    Disruption budget will be configured only when the replicaCount is greater than 1
    maxUnavailable: 1
    """

    [...str]: any

schema ValuesProbes:
    r"""
    https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    liveness : ValuesProbesLiveness, optional
    readiness : ValuesProbesReadiness, optional
    startup : ValuesProbesStartup, optional
    """

    liveness?: ValuesProbesLiveness
    readiness?: ValuesProbesReadiness
    startup?: ValuesProbesStartup

schema ValuesProbesLiveness:
    r"""
    ValuesProbesLiveness

    Attributes
    ----------
    failureThreshold : int, required, default is 3
    initialDelaySeconds : int, required, default is 1
    periodSeconds : int, required, default is 10
    successThreshold : int, required, default is 1
    timeoutSeconds : int, required, default is 5
    """

    failureThreshold: int = 3
    initialDelaySeconds: int = 1
    periodSeconds: int = 10
    successThreshold: int = 1
    timeoutSeconds: int = 5

schema ValuesProbesReadiness:
    r"""
    ValuesProbesReadiness

    Attributes
    ----------
    failureThreshold : int, required, default is 3
    initialDelaySeconds : int, required, default is 1
    periodSeconds : int, required, default is 10
    successThreshold : int, required, default is 1
    timeoutSeconds : int, required, default is 5
    """

    failureThreshold: int = 3
    initialDelaySeconds: int = 1
    periodSeconds: int = 10
    successThreshold: int = 1
    timeoutSeconds: int = 5

schema ValuesProbesStartup:
    r"""
    ValuesProbesStartup

    Attributes
    ----------
    enable : bool, required, default is False
    failureThreshold : int, required, default is 20
    initialDelaySeconds : int, required, default is 10
    periodSeconds : int, required, default is 10
    successThreshold : int, required, default is 1
    timeoutSeconds : int, required, default is 5
    """

    enable: bool = False
    failureThreshold: int = 20
    initialDelaySeconds: int = 10
    periodSeconds: int = 10
    successThreshold: int = 1
    timeoutSeconds: int = 5

schema ValuesRedis:
    r"""
    Redis deployment

    Attributes
    ----------
    enabled : bool, required, default is False
    repository : str, required, default is "redis"
    tag : str, required, default is "7.0.7"
    """

    enabled: bool = False
    repository: str = "redis"
    tag: str = "7.0.7"

schema ValuesResources:
    r"""
    ValuesResources

    Attributes
    ----------
    limits : any, optional
    requests : ValuesResourcesRequests, optional
    """

    limits?: any
    requests?: ValuesResourcesRequests

schema ValuesResourcesRequests:
    r"""
    ValuesResourcesRequests

    Attributes
    ----------
    cpu : str, required, default is "1m"
    memory : str, required, default is "16Mi"
    """

    cpu: str = "1m"
    memory: str = "16Mi"

schema ValuesSecurityContext:
    r"""
    set container security context
    """

    [...str]: any

schema ValuesService:
    r"""
    Kubernetes Service settings

    Attributes
    ----------
    annotations : ValuesServiceAnnotations, required, default is {}
    enabled : bool, required, default is True
    externalPort : int, required, default is 9898
    grpcPort : int, required, default is 9999
    grpcService : str, required, default is "podinfo"
    hostPort : any, optional
        the port used to bind the http port to the host
        # NOTE: requires privileged container with NET_BIND_SERVICE capability -- this is useful for testing
        # in local clusters such as kind without port forwarding
    httpPort : int, required, default is 9898
    metricsPort : int, required, default is 9797
    nodePort : int, required, default is 31198
    $type : str, required, default is "ClusterIP"
    """

    annotations: ValuesServiceAnnotations = {}
    enabled: bool = True
    externalPort: int = 9898
    grpcPort: int = 9999
    grpcService: str = "podinfo"
    hostPort?: any
    httpPort: int = 9898
    metricsPort: int = 9797
    nodePort: int = 31198
    $type: str = "ClusterIP"

schema ValuesServiceAccount:
    r"""
    ValuesServiceAccount

    Attributes
    ----------
    enabled : bool, required, default is False
        Specifies whether a service account should be created
    imagePullSecrets : [any], required, default is []
        List of image pull secrets if pulling from private registries
    name : any, optional
        The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
    """

    enabled: bool = False
    imagePullSecrets: [any] = []
    name?: any

schema ValuesServiceAnnotations:
    r"""
    ValuesServiceAnnotations
    """

    [...str]: any

schema ValuesServiceMonitor:
    r"""
    create Prometheus Operator monitor

    Attributes
    ----------
    additionalLabels : ValuesServiceMonitorAdditionalLabels, required, default is {}
    enabled : bool, required, default is False
    interval : str, required, default is "15s"
    """

    additionalLabels: ValuesServiceMonitorAdditionalLabels = {}
    enabled: bool = False
    interval: str = "15s"

schema ValuesServiceMonitorAdditionalLabels:
    r"""
    ValuesServiceMonitorAdditionalLabels
    """

    [...str]: any

schema ValuesTls:
    r"""
    enable tls on the podinfo service

    Attributes
    ----------
    certPath : str, required, default is "/data/cert"
        the path where the certificate key pair will be mounted
    enabled : bool, required, default is False
    hostPort : any, optional
        the port used to bind the tls port to the host
        # NOTE: requires privileged container with NET_BIND_SERVICE capability -- this is useful for testing
        # in local clusters such as kind without port forwarding
    port : int, required, default is 9899
        the port used to host the tls endpoint on the service
    secretName : any, optional
        the name of the secret used to mount the certificate key pair
    """

    certPath: str = "/data/cert"
    enabled: bool = False
    hostPort?: any
    port: int = 9899
    secretName?: any

schema ValuesUi:
    r"""
    ValuesUi

    Attributes
    ----------
    color : str, required, default is "#34577c"
    logo : str, required, default is ""
    message : str, required, default is ""
    """

    color: str = "#34577c"
    logo: str = ""
    message: str = ""

